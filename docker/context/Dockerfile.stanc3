FROM ##BaseImage## AS base
LABEL maintainer "Samuel Antao <samuel.antao@ibm.com>"

#
# install GCC
#
RUN set -eux ; \
  apt-get update; \
  apt-get install -y --no-install-recommends \
    gcc-8 \
    g++-8 \
    gfortran-8 \
    ; \
  rm -rf /var/lib/apt/lists/* ; \
  update-alternatives \
    --install /usr/bin/gcc gcc /usr/bin/gcc-8 80 \
    --slave /usr/bin/g++ g++ /usr/bin/g++-8 \
    --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-8 \
    --slave /usr/bin/gcov gcov /usr/bin/gcov-8 ; \
  ln -s /usr/bin/gcc /usr/bin/cc
    
#
# Dependencies
# 
RUN set -eux ; \
  apt-get update; \
  apt-get install -y --no-install-recommends \
    git \
    make \
    curl \
    patch \
    m4 \
    zip \
    unzip \
    xz-utils \
    libcap-dev \
    ; \
  rm -rf /var/lib/apt/lists/* 

#
# Path to install all packages including anaconda.
#
ENV InstallPath /opt/user

RUN set -eux ; \
  groupadd -r user --gid=1000  ; \
  useradd -m -r -g user --uid=1000 --home-dir=$InstallPath --shell=/bin/bash user

USER user:user
WORKDIR $InstallPath 

RUN set -eux ; \
  mkdir -p $InstallPath/ocaml/install ; \
  cd $InstallPath/ocaml/install ; \
  git clone --single-branch -b 4.07.1 https://github.com/ocaml/ocaml  ; \
  cd ocaml ; \
  ./configure --prefix $InstallPath/ocaml ; \
  make world.opt -j ; \
  make install -j
ENV PATH $InstallPath/ocaml/bin:$PATH

RUN set -eux ; \
  mkdir -p $InstallPath/opam/install ; \
  cd $InstallPath/opam/install ; \
  git clone --single-branch -b 2.0 https://github.com/ocaml/opam  ; \
  cd opam ; \
  ./configure --prefix=$InstallPath/opam ; \
  make lib-ext ; \
  make; \
  make install
ENV PATH $InstallPath/opam/bin:$PATH

RUN set -eux ; \
  opam init -y --disable-sandboxing; \
  eval $(opam config env)

RUN set -eux ; \
  eval $(opam config env) ; \
#  opam install -y core_kernel fmt menhir menhirLib ppx_deriving ppx_jane re yojson ; \
  opam install -y dune.1.8.2 core_kernel.v0.11.1 menhir.20181113 ppx_deriving.4.2.1 fmt.0.8.6 yojson

RUN set -eux ; \
  eval $(opam config env) ; \
  cd  $InstallPath ; \
  git clone --single-branch -b deep https://github.com/mandel/stanc3 ; \
  cd stanc3 ; \
  dune subst ; \
  dune build @install --profile static 
ENV PATH $InstallPath/stanc3/_build/install/default/bin:$PATH  
RUN stanc --help
